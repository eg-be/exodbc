INSTALL
=======
Find updated versions of this document at: https://exodbc.elisium.ch

This document describes some hints on how to build exobc and its components
(tests, samples) using cmake. Please follow cmkake instructions on how to
obtain cmake for your platform: https://cmake.org/

Quickstart
==========
A short manual on how to build libexodbc only:
From exOdbc top-level directory:
Create a directory for the build-environment and cd into it:
  
  mkdir build
  cd build

Tell cmake where to look for the required boost header-only libraries by
setting BOOST_ROOT (or alternatively, BOOST_INCLUDEDIR) and let cmake prepare
the environment to build only the core exodbc library:

  set LIBEXODBC_ONLY=1
  set BOOST_ROOT=e:/lib/boost_1_62_0
  cmake ..

Finally build the library:

  cmake --build . --config Release
  cmake --build . --config Debug
 
The resulting binaries have been placed in 'bin\[Debug|Release]'.

Install reference
=================

Environment variables
---------------------
Some environment variables may change the resulting cmake-configuration:

  LIBEXODBC_ONLY: If set to a non-zero value, only the core exodbc library
                  is built.


Dependencies
------------
libexOdbc:
  - boost (header-only)
    
exOdbcTest
  - boost (with compiled libraries)
  - gtest

Various hints and notes
-----------------------
- By default, shared libraries are built. This is configured in the
  CMakeLists.txt file inside the top-level directory, using
    SET(BUILD_SHARED_LIBS ON)
	
Full build
----------
Build all components including the tests and samples:

From exOdbc top-level directory:
Create a directory for the build-environment and cd into it:

  mkdir build
  cd build
  
Tell cmake where to look for the required libraries and let cmake prepare the
environment:

  set LIBEXODBC_ONLY=0
  set BOOST_ROOT=e:/lib/boost_1_62_0
  set GTEST_ROOT=e:/lib/googletest-release-1.8.0
  cmake ..

# From build-environment directory:
# Build all targets:
cmake --build .


Configure exOdbc
----------------
# From exOdbc top-level directory:
# Create a directory for the build-environment and cd into it:
mkdir build
cd build

# invoke cmake and pass path to the boost-headers:
cmake -D BOOST_INCLUDEDIR=e:/lib/boost_1_62_0 ..
# or export BOOST_ROOT first:
# set BOOST_ROOT=e:/lib/boost_1_62_0
cmake ..

# or specify a different generator:
# cmake -G "Visual Studio 14 2015 Win64" -D BOOST_INCLUDEDIR=e:/lib/boost_1_62_0 ..

Build exOdbc
------------
# From build-environment directory:
# Build all targets:
cmake --build .

# Build a specific target:
cmake --build . --target exodbc
# The following targets are defined:
exodbc:    exodbc as a shared library ('.dll')
libexodbc: exodbc as a static library ('.lib')
# Note: On windows, all targets link to the shared runtime-library ('/MD' or '/MDd')

# Set build type:
cmake --build . --config Release --target exodbc

Clean oxOdbc
--------------
# From build-environment directory:
cmake --build . --target clean

Start over (Clean cmake environment)
------------------------------------
# Simply remove the build-environment directory:
# From exOdbc top-level directory:
rmdir /S /Q build
