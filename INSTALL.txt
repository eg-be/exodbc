INSTALL
=======
Find updated versions of this document at: https://exodbc.elisium.ch

This document describes some hints on how to build exobc and its components
(tests, samples) using cmake. Please follow cmkake instructions on how to
obtain cmake for your platform: https://cmake.org/

Quickstart
==========
A short manual on how to build libexodbc only:
From exOdbc top-level directory:
Create a directory for the build-environment and cd into it:
  
  mkdir build
  cd build

Tell cmake where to look for the required boost header-only libraries by
setting BOOST_ROOT (or alternatively, BOOST_INCLUDEDIR) and let cmake prepare
the environment to build only the core exodbc library by setting BUILD_TESTS
and BUILD_SAMPLES to samples OFF:

  set BOOST_ROOT=e:/lib/boost_1_62_0
  cmake -DBUILD_TESTS=OFF -DBUILD_SAMPLES=OFF ..

Finally build the library:

  cmake --build . --config Release
  cmake --build . --config Debug
 
The resulting binaries have been placed in 'bin\[Debug|Release]'.

Full build
==========
Build all components including the tests and samples.
Requires boost-filesystem and googletest for exodbctest. Googletest is fetched
during configuration, boost-filesystem must be provided.

From exOdbc top-level directory:
Create a directory for the build-environment and cd into it:

  mkdir build
  cd build

Tell cmake where to look for the required boost libraries. boost-filesystem and
boost-system are required to build the tests.

  set BOOST_ROOT=e:/lib/boost_1_62_0
  cmake ..
  
or to prepare for a 64bit build:
  cmake -G "Visual Studio 14 2015 Win64" ..

Build all targets:
  
  cmake --build . --config Release

or for release builds:
  cmake --build . --config Debug

Install reference
=================
Configuration options and dependencies. See the cmake documentation for
more available options.

Configuration Options
---------------------
Some option variables may change the resulting cmake-configuration and can
be used with cmake:

  BUILD_TESTS:    If set to ON, exodbctest is built. 
                  Default: ON
  BUILD_SAMPLES:  If set to ON, samples are built. 
                  Default: ON
  
and how dependencies are used:

  Boost_USE_STATIC_LIBS:  Set to ON to link against static libs of boost. 
                          Default: OFF
  BUILD_SHARED_LIBS:      Build shared or static libs. 
                          Default: Set to ON if not defined.

For example, to configure 64bit vc140 builds without tests but with samples:
  cmake -G "Visual Studio 14 2015 Win64" -DBUILD_TESTS=OFF ..

To configure 64bit vc140 builds as static lib and link against boost static libs:
  cmake -G "Visual Studio 14 2015 Win64" -DBoost_USE_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF ..

To configure 32bit vc140 builds with dynamic linking:
  cmake -G "Visual Studio 14 2015" -DBoost_USE_STATIC_LIBS=OFF -DBUILD_SHARED_LIBS=ON ..

Building
--------
Use --config during build to choose either 'Release' or 'Debug' configuration 
((Default is 'Debug'):

  cmake --build . --config Release
  
Dependencies
------------
libexodbc:
  - boost (header-only)
    
exOdbcTest
  - gtest:  Fetched during compilation from github. See CMakeLists.txt.in for more
            information.
  - boost:  Only boost-filesystem is required (but it must be compiled).
  - libexodbc
  
Use something like this to build the minimal required boost components:
    bootstrap
    b2 --with-filesystem variant=debug link=shared threading=multi runtime-link=shared address-model=32
    b2 --with-filesystem variant=release link=shared threading=multi runtime-link=shared address-model=32
    b2 --with-filesystem variant=debug link=static threading=multi runtime-link=shared address-model=32
    b2 --with-filesystem variant=release link=static threading=multi runtime-link=shared address-model=32

    or for a 64bit generator:
    b2 --with-filesystem variant=debug link=shared threading=multi runtime-link=shared address-model=64
    b2 --with-filesystem variant=release link=shared threading=multi runtime-link=shared address-model=64

Clean build environment
-----------------------
# From build-environment directory:
cmake --build . --target clean

Start over (Clean cmake environment)
------------------------------------
# Simply remove the build-environment directory:
# From exOdbc top-level directory:
rmdir /S /Q build
